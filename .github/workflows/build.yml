name: Build Android project

on: [pull_request, push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.12.0
      with:
        access_token: ${{ github.token }}

    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

    - name: Gradle Wrapper Validation
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Java
      uses: ./.github/actions/setup-java
      id: java

    - name: Copy CI gradle.properties
      run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

    - uses: burrunan/gradle-cache-action@v1
      name: Build
      with:
        gradle-dependencies-cache-key: |
          gradle/libs.versions.toml
        arguments: assembleDebug

    - name: Upload build outputs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: build-outputs
        path: app/build/outputs

  # screenshots:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 30

  #   steps:
  #   - name: Cancel Previous Runs
  #     uses: styfle/cancel-workflow-action@0.11.0
  #     with:
  #       access_token: ${{ github.token }}

  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - name: Gradle Wrapper Validation
  #     uses: gradle/wrapper-validation-action@v1

  #   - name: Setup Java
  #     uses: ./.github/actions/setup-java
  #     id: java

  #   - uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: '2.7'
    
  #   - name: Copy CI gradle.properties
  #     run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

  #   - uses: burrunan/gradle-cache-action@v1
  #     name: Verify paparazzi
  #     with:
  #       gradle-dependencies-cache-key: |
  #         gradle/libs.versions.toml
  #       arguments: |
  #         preview-screenshots:verifyPaparazziDebug

  #   - name: Upload images
  #     if: failure()
  #     run: |
  #       if [ -d "preview-screenshots/out/" ]; then
  #         git config --global user.name "github-actions[bot]"
  #         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

  #         cp -r preview-screenshots/out/failures screenshots
  #         git fetch origin screenshots
  #         git switch screenshots
  #         mkdir -p images
  #         rsync -av screenshots/ images/

  #         filename=`ls -1 -t screenshots | head -n 1`
  #         rm -rf screenshots
  #         s=`git status -s images`
  #         if [ -n "$s" ]; then
  #           git add images
  #           git commit -m "add screenshots"
  #           git push origin screenshots
  #         fi

  #         git switch - --detach
  #         echo "screenshot_path=$filename" >> "$GITHUB_ENV"
  #       fi

  #   - name: comment failure image
  #     if: failure()
  #     run: |
  #       bundle install
  #       danger --danger_id=failure-images --dangerfile=Dangerfile
  #     env:
  #       DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       SCREENSHOT_PATH: https://github.com/satoshun-android-example/Template/blob/screenshots/images/${{ env.screenshot_path }}?raw=true

  #   - name: Upload failure outputs
  #     if: failure()
  #     uses: actions/upload-artifact@v3
  #     with:
  #       name: failure-screenshots
  #       path: preview-screenshots/out/failures
